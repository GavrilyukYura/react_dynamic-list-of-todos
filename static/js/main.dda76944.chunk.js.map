{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","select","className","map","todo","classNames","id","userId","completed","title","type","onClick","TodoFilter","filtredTodos","useState","query","setQuery","status","setStatus","useEffect","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","user","setUser","isLoading","setIsLoading","person","href","email","name","App","todosFromServer","setTodosFromServer","visibleTodos","setVisibleTotos","setSelectedTodo","loading","a","filter","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dda76944.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number;\n  select: (value: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedTodo, select }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <>\n          <tr\n            data-cy=\"todo\"\n            className={\n              classNames(\n                { 'has-background-info-light': selectedTodo === todo.id },\n              )\n            }\n          >\n            <td className=\"is-vcentered\">{todo.userId}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <i className=\"fas fa-check\" />\n                </td>\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  select(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        </>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\n\ntype Props = {\n  filtredTodos: (value: string, status: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filtredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    filtredTodos(query, status);\n  }, [query, status]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            setQuery((event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | undefined;\n  select: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, select }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(person => {\n          setUser(person);\n          setIsLoading(true);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => select(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [visibleTodos, setVisibleTotos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n\n  const select = (value: number) => setSelectedTodo(value);\n\n  useEffect(() => {\n    const loading = async () => {\n      setTodosFromServer(await getTodos());\n      setVisibleTotos(await getTodos());\n      setIsLoading(true);\n    };\n\n    loading();\n  }, []);\n\n  const filtredTodos = (value: string, status: string) => {\n    const todos = todosFromServer.filter(todo => {\n      switch (status) {\n        case 'completed':\n          return todo.completed && todo.title.includes(value);\n        case 'active':\n          return !todo.completed && todo.title.includes(value);\n        default:\n          return todo.title.includes(value);\n      }\n    });\n\n    setVisibleTotos(todos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filtredTodos={filtredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    select={select}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo > 0 && (\n        <TodoModal\n          todo={visibleTodos.find(todo => todo.id === selectedTodo)}\n          select={select}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}